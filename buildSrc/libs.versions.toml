[versions]
kotlin = "1.9.20"
kotlinx-coroutines = "1.7.0"
#kotlinx-serialization = "1.3.3"
kotlin-logging = "5.1.0"

spring-boot = "3.2.2"
spring-dependency-management = "1.1.4"
spring-boot-jasypt = "3.0.5"
spring-security = "5.0.7.RELEASE"


netty-resolver-macos = "4.1.79.Final:osx-aarch_64"
jib = "3.4.0"

logback = "1.4.11"
logstash-logback-encoder = "7.4"

springdoc-openapi = "2.2.0"

ktlint = "11.6.1"
testcontainers-redis = "2.0.1"
kotest = "5.7.2"
kotest-extensions-spring = "1.1.3"
mockk = "1.13.8"
springmockk = "4.0.2"
archunit-junit5 = "1.2.1"

redisson = "3.23.2"

java-jwt = "4.4.0"
[libraries]
java-jwt = { module = "com.auth0:java-jwt", version.ref = "java-jwt" }

# kotlin
kotlin = { module = "org.jetbrains.kotlin:kotlin-stdlib" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect" }

# kotlin coroutines
kotlinx-coroutines-reactor = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-reactor", version.ref = "kotlinx-coroutines" }
kotlin-reactor-extensions = { module = "io.projectreactor.kotlin:reactor-kotlin-extensions" }
kotlinx-coroutines-slf4j = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-slf4j", version.ref = "kotlinx-coroutines" }

# kotlin utils
kotlin-logging = { module = "io.github.oshai:kotlin-logging-jvm", version.ref = "kotlin-logging" }

# spring boot starter
spring-boot-starter-web = { module = "org.springframework.boot:spring-boot-starter-web" }
spring-boot-starter-security = { module = "org.springframework.boot:spring-boot-starter-security" }
spring-boot-starter-tomcat = { module = "org.springframework.boot:spring-boot-starter-tomcat" }
spring-boot-starter-webflux = { module = "org.springframework.boot:spring-boot-starter-webflux" }
spring-boot-starter-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator" }
spring-boot-starter-batch = { module = "org.springframework.boot:spring-boot-starter-batch" }
spring-boot-starter-data-jpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa" }
spring-boot-starter-jasypt = { module = "com.github.ulisesbocchio:jasypt-spring-boot-starter", version.ref = "spring-boot-jasypt" }

# spring data
spring-data-jdbc = { module = "org.springframework.boot:spring-boot-starter-data-jdbc" }
spring-data-elasticsearch = { module = "org.springframework.boot:spring-boot-starter-data-elasticsearch" }
spring-security-crypto = { module = "org.springframework.security:spring-security-crypto", version.ref = "spring-security" }
spring-data-mongodb = { module = "org.springframework.boot:spring-boot-starter-data-mongodb" }
spring-data-redis = { module = "org.springframework.boot:spring-boot-starter-data-redis" }

# spring cloud
spring-cloud-config = { module = "org.springframework.cloud:spring-cloud-starter-config" }

# mysql
mysql-connector = { module = "com.mysql:mysql-connector-j" }

# jackson
jackson-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin" }

# netty
netty-resolver-macos = { module = "io.netty:netty-resolver-dns-native-macos", version.ref = "netty-resolver-macos" }

# coroutines
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-jdk8 = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-debug = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-debug", version.ref = "kotlinx-coroutines" }

#
#kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }

# openapi
springdoc-openapi-starter-webmvc-ui = { module = "org.springdoc:springdoc-openapi-starter-webmvc-ui", version.ref = "springdoc-openapi" }

# flyway
flyway-core = { module = "org.flywaydb:flyway-core" }
flyway-mysql = { module = "org.flywaydb:flyway-mysql" }

# logback
logback-core = { module = "ch.qos.logback:logback-core", version.ref = "logback" }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
logback-access = { module = "ch.qos.logback:logback-access", version.ref = "logback" }
logstash-logback-encoder = { module = "net.logstash.logback:logstash-logback-encoder", version.ref = "logstash-logback-encoder" }

# test
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx-coroutines" }
spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test" }
spring-batch-test = { module = "org.springframework.batch:spring-batch-test" }
spring-boot-testcontainers = { module = "org.springframework.boot:spring-boot-testcontainers" }
testcontainers-junit-jupiter = { module = "org.testcontainers:junit-jupiter" }
testcontainers-mysql = { module = "org.testcontainers:mysql" }
testcontainers-mongodb = { module = "org.testcontainers:mongodb" }
testcontainers-redis = { module = "com.redis:testcontainers-redis", version.ref = "testcontainers-redis" }

kotest-assertions-core-jvm = { module = "io.kotest:kotest-assertions-core-jvm", version.ref = "kotest" }
kotest-runner-junit5-jvm = { module = "io.kotest:kotest-runner-junit5-jvm", version.ref = "kotest" }
kotest-property-jvm = { module = "io.kotest:kotest-property-jvm", version.ref = "kotest" }
kotest-framework-datatest = { module = "io.kotest:kotest-framework-datatest", version.ref = "kotest" }
kotest-extensions-spring = { module = "io.kotest.extensions:kotest-extensions-spring", version.ref = "kotest-extensions-spring" }

mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
springmockk = { module = "com.ninja-squad:springmockk", version.ref = "springmockk" }

archunit-junit5 = { module = "com.tngtech.archunit:archunit-junit5", version.ref = "archunit-junit5" }

redisson = { module = "org.redisson:redisson", version.ref = "redisson" }


[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot" }
spring-dependency-management = { id = "io.spring.dependency-management", version.ref = "spring-dependency-management" }
jib = { id = "com.google.cloud.tools.jib", version.ref = "jib" }
ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlint" }
